#include <WiFi.h>
#include <PubSubClient.h>

const char* ssid = "Wokwi-GUEST"; ///  wifi ssid
const char* password = "";
const char* mqtt_server = "test.mosquitto.org";// mosquitto server url

WiFiClient espClient;
PubSubClient client(espClient);
unsigned long lastMsg = 0;

int energy = 4455;
const unsigned long eventInterval = 100000;
unsigned long previousTime = 0;

void setup_wifi() {
  delay(10);
  Serial.println();
  Serial.print("Connecting to ");
  Serial.println(ssid);

  WiFi.mode(WIFI_STA);
  WiFi.begin(ssid, password);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }

  randomSeed(micros());

  Serial.println("");
  Serial.println("WiFi connected");
  Serial.println("IP address: ");
  Serial.println(WiFi.localIP());
}
void callback(char* topic, byte* payload, unsigned int length) {
  Serial.print("Message arrived [");
  Serial.print(topic);
  Serial.print("] ");
  for (int i = 0; i < length; i++) {
    Serial.print((char)payload[i]);
  }
}
void reconnect() {
  while (!client.connected()) {
    Serial.print("Atvting MQTT connection...");
    String clientId = "ESP32Client-";
    clientId += String(random(0xffff), HEX);
    if (client.connect(clientId.c_str())) {
      Serial.println("Connected");
      client.publish("/ThinkIOT/Publish", "Welcome");
      client.subscribe("/ThinkIOT/Subscribe");
    } else {
      Serial.print("failed, rc=");
      Serial.print(client.state());
      Serial.println(" try again in 5 seconds");
      delay(5000);
    }
  }
}
void setup() {

  Serial.begin(115200);
  setup_wifi();
  client.setServer(mqtt_server, 1883);
  client.setCallback(callback);

}
void loop() {
  unsigned long currentTime = millis();
  if (!client.connected()) {
    reconnect();
  }
  client.loop();

  int volts = random(380,420);
  int current = random(50,120);
  
  int running_load = random(15,50);
  int frequency = 50;
  int power_factor = random(90,95);

  unsigned long now = millis();
  if (now - lastMsg > 2000) { //perintah publish data
    lastMsg = now;

    String volt = String(volts);
    client.publish("/Thinkitive/v1", volt.c_str()); // publish v topic /ThinkIOT/v

    String ampere = String(current);
    client.publish("/Thinkitive/i1", ampere.c_str());   // publish i topic /ThinkIOT/i

    String kwh = String(energy);
    client.publish("/Thinkitive/kwh1", kwh.c_str());

    String kw = String(running_load);
    client.publish("/Thinkitive/kw1", kw.c_str());

    String hz = String(frequency);
    client.publish("/Thinkitive/hz1", hz.c_str());

    String pF = String(power_factor);
    client.publish("/Thinkitive/pF1", pF.c_str());

    Serial.print("Volts: ");
    Serial.println(volt);
    Serial.print("Current: ");
    Serial.println(ampere);
    Serial.print("Energy: ");
    Serial.println(energy);
  }
   if (currentTime - previousTime >= eventInterval) {
    /* Event code */

    Serial.println("energy increase");
    energy++;
   /* Update the timing for the next time around */
    previousTime = currentTime;
  }
  
}